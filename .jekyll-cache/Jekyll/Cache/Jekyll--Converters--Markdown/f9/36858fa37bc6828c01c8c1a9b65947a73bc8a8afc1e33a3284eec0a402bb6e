I""<h1 id="jar-파일을-gradle-task로-실행하기">Jar 파일을 Gradle task로 실행하기</h1>

<p><img src="/assets/img/post/20211219_01.jpeg" alt="GRADLE" /><br /></p>

<h2 id="jar-파일을-gradle-task로">Jar 파일을 Gradle task로?</h2>

<p>유틸프로그램 또는 스크립트를 Java 또는 Kotlin으로 작성해서 <br />
간단한 업무 자동화를 적용해보려는 시도를 해보신 적이 있으신가요?<br />
Kotlin DSL을 활용한다면 물론 jar 파일 없이도 코틀린을 gradle에서 실행할 수 있지만<br />
굳이 그러지 않더라도 별도의 jar파일로 프로젝트에 추가하여 gradle에서 task로 실행할 수 있습니다.<br /></p>

<h2 id="어떤-식으로-활용할-수-있나요">어떤 식으로 활용할 수 있나요?</h2>
<p>저는 Google Sheet에 정리된 다국어 목록을 안드로이드 리소스 파일로 변환해주는 유틸 프로그램과<br />
프로젝트에서 자주 사용하는 코드 템플릿을 한꺼번에 자동으로 생성해주는 유틸 프로그램을 코틀린으로 작성하여<br />
해당 스크립트를 jar 파일로 실행하여 사용하고 있습니다.<br />
jar파일 생성하는 법은 지난 포스팅 <a href="https://haenarashin.github.io/kotlin/2021/07/31/Excutable-jar.html">Kotlin으로 실행 가능한 JAR 파일 만들기</a>을 참고해주세요.<br /></p>

<p><br /><br /><br /></p>

<h2 id="task-추가하기">Task 추가하기</h2>

<p>다음은 필수 인자로 넣어줍니다.</p>

<ul>
  <li>태스크 이름(groovy에서는 태스크 이름, kotlin에서는 String 인자로)</li>
  <li>main : 메인 메소드 위치</li>
  <li>classpath : JAR 파일 위치</li>
</ul>

<p>그 외에 추가로 다음 인자는 옵션으로 넣어줍니다.</p>

<ul>
  <li>group : 태스크의 그룹. 없다면 other에 들어갑니다.</li>
  <li>description : 태스크 설명.</li>
  <li>args : 프로그램 인자</li>
</ul>

<h3 id="groovy인-경우-buildgradle">Groovy인 경우 (build.gradle)</h3>

<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">task</span> <span class="nf">sample_task</span><span class="o">(</span><span class="nl">type:</span> <span class="n">JavaExec</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">group</span> <span class="o">=</span> <span class="s2">"_sample_"</span>
    <span class="n">description</span> <span class="o">=</span> <span class="s2">"샘플 유틸 태스크"</span>
    <span class="n">classpath</span> <span class="o">=</span> <span class="n">files</span><span class="o">(</span><span class="s2">"$rootDir/Util.jar"</span><span class="o">)</span>
    <span class="n">main</span> <span class="o">=</span> <span class="s1">'dev.haenara.util.MainKt'</span>
    <span class="n">args</span> <span class="o">=</span> <span class="o">[</span><span class="s1">'arg1'</span><span class="o">,</span> <span class="s1">'arg2'</span><span class="o">]</span>
<span class="o">}</span>
</code></pre></div></div>
<h3 id="kotlin-dsl-인-경우-buildgradlekts">Kotlin DSL 인 경우 (build.gradle.kts)</h3>
<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tasks</span><span class="p">.</span><span class="nf">register</span><span class="p">(</span><span class="s">"sample_task"</span><span class="p">,</span> <span class="nc">JavaExec</span><span class="o">::</span><span class="k">class</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">group</span> <span class="p">=</span> <span class="s">"_sample_"</span>
    <span class="n">description</span> <span class="p">=</span> <span class="s">"샘플 유틸 태스크"</span>
    <span class="n">classpath</span> <span class="p">=</span> <span class="nf">files</span><span class="p">(</span><span class="s">"$rootDir/Util.jar"</span><span class="p">)</span>
    <span class="n">main</span> <span class="p">=</span> <span class="s">"dev.haenara.util.MainKt"</span>
    <span class="n">args</span> <span class="p">=</span> <span class="nf">listOf</span><span class="p">(</span><span class="s">"arg1"</span><span class="p">,</span> <span class="s">"arg2"</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p>위와 같이 
만약에 Path에 <code class="language-plaintext highlighter-rouge">/</code>를 넣어서 윈도우에서 동작하지 않는다면 아래와 같이 path를 사용하여 해결합니다.<br />
단 함수위에 Experimental 어노테이션을 추가해야한다.<br /></p>

<div class="language-kotlin highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@OptIn</span><span class="p">(</span><span class="nc">ExperimentalPathApi</span><span class="o">::</span><span class="k">class</span><span class="p">)</span>
<span class="n">tasks</span><span class="p">.</span><span class="nf">register</span><span class="p">(</span><span class="s">"sample_task"</span><span class="p">,</span> <span class="nc">JavaExec</span><span class="o">::</span><span class="k">class</span><span class="p">)</span> <span class="p">{</span>
    <span class="o">..</span><span class="p">.</span>
    <span class="n">classpath</span> <span class="p">=</span> <span class="nf">files</span><span class="p">(</span><span class="nf">path</span><span class="p">(</span><span class="n">rootDir</span><span class="p">)</span> <span class="p">{</span> <span class="k">this</span> <span class="p">/</span> <span class="s">"Util.jar"</span> <span class="p">})</span>
    <span class="o">..</span><span class="p">.</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="예제-실행">예제 실행</h2>

<p><img src="/assets/img/post/20211219_02.png" alt="change" /><br /></p>

<p>gradle 탭에 다음과 같이 Task가 생성된 것을 확인할 수 있습니다.<br /></p>
:ET